{"ast":null,"code":"var _jsxFileName = \"/opt/stb/courier/frontend/src/components/CourierSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Card, CardContent, CardHeader, Typography, TextField, Button, Checkbox, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Grid, Accordion, AccordionSummary, AccordionDetails, CircularProgress, ThemeProvider, createTheme, CssBaseline } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { API_BASE_URL } from \"../config\";\n\n// Create a light theme\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#1976d2\"\n    },\n    secondary: {\n      main: \"#dc004e\"\n    },\n    background: {\n      default: \"#f5f5f5\",\n      paper: \"#ffffff\"\n    }\n  }\n});\nconst CourierSearch = () => {\n  _s();\n  const navigate = useNavigate();\n  const [courierId, setCourierId] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Add courierId to visible columns\n  const [visibleColumns, setVisibleColumns] = useState({\n    date: true,\n    courierId: true,\n    tar: true,\n    tcr: true,\n    dph: true,\n    onlineHours: true,\n    onTaskHours: true,\n    idleHours: true,\n    numDeliveries: true,\n    tarShownTasks: true,\n    tarStartedTasks: true,\n    taskDistanceCost: true,\n    shiftGuarantee: true,\n    upfrontPricingAdjustment: true,\n    taskPickupDistanceCost: true,\n    taskBaseCost: true,\n    tip: true,\n    taskCapabilityCost: true,\n    manual: true,\n    cashReceived: true\n  });\n\n  // Add courierId to columns definition\n  const columns = [{\n    id: \"date\",\n    label: \"Date\",\n    visible: visibleColumns.date,\n    aggregate: null,\n    color: \"White\"\n  }, {\n    id: \"courierId\",\n    label: \"Courier ID\",\n    visible: visibleColumns.courierId,\n    aggregate: null,\n    color: \"White\"\n  }, {\n    id: \"tar\",\n    label: \"TAR\",\n    visible: visibleColumns.tar,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"tcr\",\n    label: \"TCR\",\n    visible: visibleColumns.tcr,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"dph\",\n    label: \"DPH\",\n    visible: visibleColumns.dph,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"onlineHours\",\n    label: \"Total Online Time\",\n    visible: visibleColumns.onlineHours,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"onTaskHours\",\n    label: \"Total On-Task Time\",\n    visible: visibleColumns.onTaskHours,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"idleHours\",\n    label: \"Total Idle Time\",\n    visible: visibleColumns.idleHours,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"numDeliveries\",\n    label: \"Deliveries\",\n    visible: visibleColumns.numDeliveries,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"tarShownTasks\",\n    label: \"Tasks Shown\",\n    visible: visibleColumns.tarShownTasks,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"tarStartedTasks\",\n    label: \"Tasks Started\",\n    visible: visibleColumns.tarStartedTasks,\n    aggregate: \"avg\",\n    color: \"purple\"\n  }, {\n    id: \"taskDistanceCost\",\n    label: \"Task Distance Cost\",\n    visible: visibleColumns.taskDistanceCost,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"shiftGuarantee\",\n    label: \"Shift Guarantee\",\n    visible: visibleColumns.shiftGuarantee,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"upfrontPricingAdjustment\",\n    label: \"Upfront Pricing Adjustment\",\n    visible: visibleColumns.upfrontPricingAdjustment,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"taskPickupDistanceCost\",\n    label: \"Task Pickup Distance Cost\",\n    visible: visibleColumns.taskPickupDistanceCost,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"taskBaseCost\",\n    label: \"Task Base Cost\",\n    visible: visibleColumns.taskBaseCost,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"tip\",\n    label: \"Tip\",\n    visible: visibleColumns.tip,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"taskCapabilityCost\",\n    label: \"Task Capability Cost\",\n    visible: visibleColumns.taskCapabilityCost,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"manual\",\n    label: \"Manual\",\n    visible: visibleColumns.manual,\n    aggregate: \"sum\",\n    color: \"green\"\n  }, {\n    id: \"cashReceived\",\n    label: \"Cash Received\",\n    visible: visibleColumns.cashReceived,\n    aggregate: \"sum\",\n    color: \"green\"\n  }];\n  const calculateAggregates = data => {\n    const result = {};\n    columns.forEach(col => {\n      if (col.aggregate === \"sum\") {\n        result[col.id] = data.reduce((sum, row) => sum + (row[col.id] || 0), 0);\n      } else if (col.aggregate === \"avg\") {\n        let sum = 0,\n          count = 0;\n        data.forEach(row => {\n          if (row[col.id] !== undefined && row[col.id] !== null) {\n            sum += row[col.id];\n            count += 1;\n          }\n        });\n        result[col.id] = count > 0 ? sum / count : 0;\n      }\n    });\n    return result;\n  };\n  const fetchAllCouriers = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/couriers/all-stats`);\n      const data = await response.json();\n      console.log(data.data[0]);\n      if (data.success) {\n        const formattedData = data.data.map(courierData => {\n          var _courierData$tar, _courierData$tcr, _courierData$dph, _courierData$onlineHo, _courierData$onTaskHo, _courierData$idleHour, _courierData$numDeliv, _courierData$tarShown, _courierData$tarStart, _courierData$cashBala;\n          return {\n            date: new Date(courierData.date).toISOString().slice(5, 10),\n            courierId: courierData.courierId,\n            tar: ((_courierData$tar = courierData.tar) === null || _courierData$tar === void 0 ? void 0 : _courierData$tar.value) || 0,\n            tcr: ((_courierData$tcr = courierData.tcr) === null || _courierData$tcr === void 0 ? void 0 : _courierData$tcr.value) || 0,\n            dph: ((_courierData$dph = courierData.dph) === null || _courierData$dph === void 0 ? void 0 : _courierData$dph.value) || 0,\n            onlineHours: ((_courierData$onlineHo = courierData.onlineHours) === null || _courierData$onlineHo === void 0 ? void 0 : _courierData$onlineHo.value) || 0,\n            onTaskHours: ((_courierData$onTaskHo = courierData.onTaskHours) === null || _courierData$onTaskHo === void 0 ? void 0 : _courierData$onTaskHo.value) || 0,\n            idleHours: ((_courierData$idleHour = courierData.idleHours) === null || _courierData$idleHour === void 0 ? void 0 : _courierData$idleHour.value) || 0,\n            numDeliveries: ((_courierData$numDeliv = courierData.numDeliveries) === null || _courierData$numDeliv === void 0 ? void 0 : _courierData$numDeliv.value) || 0,\n            tarShownTasks: ((_courierData$tarShown = courierData.tarShownTasks) === null || _courierData$tarShown === void 0 ? void 0 : _courierData$tarShown.value) || 0,\n            tarStartedTasks: Number((_courierData$tarStart = courierData.tarStartedTasks) === null || _courierData$tarStart === void 0 ? void 0 : _courierData$tarStart.value) || 0,\n            taskDistanceCost: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_task_distance_cost\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            shiftGuarantee: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_shift_guarantee\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            upfrontPricingAdjustment: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_upfront_pricing_adjustment\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            taskPickupDistanceCost: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_task_pickup_distance_cost\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            taskBaseCost: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_task_base_cost\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            tip: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_tip\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            taskCapabilityCost: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_task_capability_cost\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            manual: (courierData.earnings || []).filter(e => e.transactionType === \"transaction_type_manual\").reduce((sum, e) => sum + e.amount, 0) / 1000,\n            cashReceived: ((_courierData$cashBala = courierData.cashBalance) === null || _courierData$cashBala === void 0 ? void 0 : _courierData$cashBala.amount) || 0\n          };\n        });\n        setRows(formattedData);\n      } else {\n        setRows([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching courier data:\", error);\n      setRows([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch all courier data on component mount\n  useEffect(() => {\n    fetchAllCouriers();\n  }, [fetchAllCouriers]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (courierId) {\n      // Navigate to WoltDashboard with the courier ID\n      navigate(`/dashboard?courierId=${courierId}`);\n    }\n  };\n  const handleRowClick = row => {\n    // Navigate to WoltDashboard when a row is clicked\n    navigate(`/dashboard?courierId=${row.courierId}`);\n  };\n  const toggleColumn = columnId => {\n    setVisibleColumns(prev => ({\n      ...prev,\n      [columnId]: !prev[columnId]\n    }));\n  };\n  const aggregates = calculateAggregates(rows);\n  const getCellColor = columnId => {\n    const column = columns.find(col => col.id === columnId);\n    if (!column || !column.color) return undefined;\n    if (theme.palette.mode === \"light\") {\n      if (column.color === \"purple\") {\n        return \"#e0d7f1\";\n      } else if (column.color === \"White\") {\n        return \"#f5f5f5\"; // Light gray for white in light mode\n      } else {\n        return \"#d7f1d7\"; // Green\n      }\n    } else {\n      if (column.color === \"purple\") {\n        return \"#4a148c\";\n      } else if (column.color === \"White\") {\n        return \"#303030\"; // Dark gray for white in dark mode\n      } else {\n        return \"#1b5e20\"; // Dark green\n      }\n    }\n  };\n  const getHeaderColor = columnId => {\n    const column = columns.find(col => col.id === columnId);\n    if (!column || !column.color) return undefined;\n    if (theme.palette.mode === \"light\") {\n      if (column.color === \"purple\") {\n        return \"#d6c6e9\";\n      } else if (column.color === \"White\") {\n        return \"#e0e0e0\"; // Slightly darker gray for headers in light mode\n      } else {\n        return \"#c6e9c6\"; // Green\n      }\n    } else {\n      if (column.color === \"purple\") {\n        return \"#6a1b9a\";\n      } else if (column.color === \"null\") {\n        return \"#424242\"; // Slightly lighter gray for headers in dark mode\n      } else {\n        return \"#2e7d32\"; // Dark green\n      }\n    }\n  };\n  const formatNumber = number => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        maxWidth: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Courier Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                mb: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                sx: {\n                  maxWidth: \"800px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  sx: {\n                    display: \"flex\",\n                    alignItems: \"flex-start\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    value: courierId,\n                    onChange: e => setCourierId(e.target.value),\n                    placeholder: \"Enter courier ID to view detailed dashboard\",\n                    helperText: \"Enter ID and click Search to view detailed dashboard\",\n                    label: \"Courier ID\",\n                    sx: {\n                      mt: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  sx: {\n                    display: \"flex\",\n                    alignItems: \"flex-start\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    type: \"submit\",\n                    fullWidth: true,\n                    sx: {\n                      height: 40,\n                      mt: 1\n                    },\n                    disabled: !courierId,\n                    children: \"View Detailed Dashboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 47\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  fontWeight: \"medium\",\n                  children: \"Column Visibility\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  children: columns.map(col => /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    md: 4,\n                    lg: 2,\n                    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: visibleColumns[col.id],\n                        onChange: () => toggleColumn(col.id),\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 29\n                      }, this),\n                      label: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          color: col.color === \"purple\" ? \"purple\" : col.color === \"green\" ? \"green\" : \"inherit\"\n                        },\n                        children: col.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 25\n                    }, this)\n                  }, col.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            sx: {\n              overflowX: \"auto\",\n              maxHeight: \"600px\",\n              // Set a max height to enable vertical scrolling\n              \"& .MuiTableHead-root\": {\n                position: \"sticky\",\n                top: 0,\n                zIndex: 1 // Ensure header stays above content when scrolling\n              }\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: columns.filter(col => col.visible).map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      backgroundColor: getHeaderColor(col.id),\n                      fontWeight: \"bold\"\n                    },\n                    children: col.label\n                  }, col.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: loading ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: columns.filter(col => col.visible).length,\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        p: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                        size: 24\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          ml: 1\n                        },\n                        children: \"Loading data...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 542,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this) : rows.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: columns.filter(col => col.visible).length,\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: \"No data available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [rows.map((row, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    onClick: () => handleRowClick(row),\n                    sx: {\n                      cursor: \"pointer\",\n                      p: 0\n                    },\n                    children: columns.filter(col => col.visible).map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        backgroundColor: getCellColor(col.id),\n                        whiteSpace: \"nowrap\",\n                        textAlign: \"right\"\n                      },\n                      children: col.id === \"date\" ? row[col.id] : col.id === \"courierId\" ? row[col.id] : typeof row[col.id] === \"number\" ? col.id.includes(\"Hours\") ? `${Number(row[col.id]).toFixed(2)}h` : col.color === \"purple\" ? col.id === \"numDeliveries\" || col.id === \"tarShownTasks\" || col.id === \"tarStartedTasks\" ? Number(row[col.id]) : Number(row[col.id]).toFixed(2) : formatNumber(Math.round(row[col.id])) : row[col.id] || \"0\"\n                    }, col.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 31\n                    }, this))\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: columns.filter(col => col.visible).map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: \"bold\",\n                        backgroundColor: getHeaderColor(col.id),\n                        whiteSpace: \"nowrap\"\n                      },\n                      children: col.id === \"date\" ? \"Summary\" : aggregates[col.id] !== undefined ? col.id.includes(\"Hours\") ? Number(aggregates[col.id]).toFixed(2) + \"h\" : col.aggregate === \"avg\" ? Number(aggregates[col.id]).toFixed(2) : formatNumber(Math.round(aggregates[col.id])) : \"\"\n                    }, col.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n};\n_s(CourierSearch, \"BOxtMKzXfifBGw68Poha9X9XDs0=\", false, function () {\n  return [useNavigate];\n});\n_c = CourierSearch;\nexport default CourierSearch;\nvar _c;\n$RefreshReg$(_c, \"CourierSearch\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Box","Card","CardContent","CardHeader","Typography","TextField","Button","Checkbox","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Grid","Accordion","AccordionSummary","AccordionDetails","CircularProgress","ThemeProvider","createTheme","CssBaseline","ExpandMoreIcon","API_BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","mode","primary","main","secondary","background","default","paper","CourierSearch","_s","navigate","courierId","setCourierId","rows","setRows","loading","setLoading","visibleColumns","setVisibleColumns","date","tar","tcr","dph","onlineHours","onTaskHours","idleHours","numDeliveries","tarShownTasks","tarStartedTasks","taskDistanceCost","shiftGuarantee","upfrontPricingAdjustment","taskPickupDistanceCost","taskBaseCost","tip","taskCapabilityCost","manual","cashReceived","columns","id","label","visible","aggregate","color","calculateAggregates","data","result","forEach","col","reduce","sum","row","count","undefined","fetchAllCouriers","response","fetch","json","console","log","success","formattedData","map","courierData","_courierData$tar","_courierData$tcr","_courierData$dph","_courierData$onlineHo","_courierData$onTaskHo","_courierData$idleHour","_courierData$numDeliv","_courierData$tarShown","_courierData$tarStart","_courierData$cashBala","Date","toISOString","slice","value","Number","earnings","filter","e","transactionType","amount","cashBalance","error","handleSubmit","preventDefault","handleRowClick","toggleColumn","columnId","prev","aggregates","getCellColor","column","find","getHeaderColor","formatNumber","number","toString","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","maxWidth","mb","title","onSubmit","display","justifyContent","container","spacing","item","xs","md","alignItems","fullWidth","size","onChange","target","placeholder","helperText","mt","variant","type","height","disabled","expandIcon","fontWeight","lg","control","checked","component","overflowX","maxHeight","position","top","zIndex","backgroundColor","colSpan","length","align","ml","idx","hover","onClick","cursor","whiteSpace","textAlign","includes","toFixed","Math","round","_c","$RefreshReg$"],"sources":["/opt/stb/courier/frontend/src/components/CourierSearch.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  TextField,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  CircularProgress,\n  ThemeProvider,\n  createTheme,\n  CssBaseline,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { API_BASE_URL } from \"../config\";\n\n// Create a light theme\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#1976d2\",\n    },\n    secondary: {\n      main: \"#dc004e\",\n    },\n    background: {\n      default: \"#f5f5f5\",\n      paper: \"#ffffff\",\n    },\n  },\n});\n\nconst CourierSearch = () => {\n  const navigate = useNavigate();\n  const [courierId, setCourierId] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Add courierId to visible columns\n  const [visibleColumns, setVisibleColumns] = useState({\n    date: true,\n    courierId: true,\n    tar: true,\n    tcr: true,\n    dph: true,\n    onlineHours: true,\n    onTaskHours: true,\n    idleHours: true,\n    numDeliveries: true,\n    tarShownTasks: true,\n    tarStartedTasks: true,\n    taskDistanceCost: true,\n    shiftGuarantee: true,\n    upfrontPricingAdjustment: true,\n    taskPickupDistanceCost: true,\n    taskBaseCost: true,\n    tip: true,\n    taskCapabilityCost: true,\n    manual: true,\n    cashReceived: true,\n  });\n\n  // Add courierId to columns definition\n  const columns = [\n    {\n      id: \"date\",\n      label: \"Date\",\n      visible: visibleColumns.date,\n      aggregate: null,\n      color: \"White\",\n    },\n    {\n      id: \"courierId\",\n      label: \"Courier ID\",\n      visible: visibleColumns.courierId,\n      aggregate: null,\n      color: \"White\",\n    },\n    {\n      id: \"tar\",\n      label: \"TAR\",\n      visible: visibleColumns.tar,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"tcr\",\n      label: \"TCR\",\n      visible: visibleColumns.tcr,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"dph\",\n      label: \"DPH\",\n      visible: visibleColumns.dph,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"onlineHours\",\n      label: \"Total Online Time\",\n      visible: visibleColumns.onlineHours,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"onTaskHours\",\n      label: \"Total On-Task Time\",\n      visible: visibleColumns.onTaskHours,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"idleHours\",\n      label: \"Total Idle Time\",\n      visible: visibleColumns.idleHours,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"numDeliveries\",\n      label: \"Deliveries\",\n      visible: visibleColumns.numDeliveries,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"tarShownTasks\",\n      label: \"Tasks Shown\",\n      visible: visibleColumns.tarShownTasks,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"tarStartedTasks\",\n      label: \"Tasks Started\",\n      visible: visibleColumns.tarStartedTasks,\n      aggregate: \"avg\",\n      color: \"purple\",\n    },\n    {\n      id: \"taskDistanceCost\",\n      label: \"Task Distance Cost\",\n      visible: visibleColumns.taskDistanceCost,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"shiftGuarantee\",\n      label: \"Shift Guarantee\",\n      visible: visibleColumns.shiftGuarantee,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"upfrontPricingAdjustment\",\n      label: \"Upfront Pricing Adjustment\",\n      visible: visibleColumns.upfrontPricingAdjustment,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"taskPickupDistanceCost\",\n      label: \"Task Pickup Distance Cost\",\n      visible: visibleColumns.taskPickupDistanceCost,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"taskBaseCost\",\n      label: \"Task Base Cost\",\n      visible: visibleColumns.taskBaseCost,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"tip\",\n      label: \"Tip\",\n      visible: visibleColumns.tip,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"taskCapabilityCost\",\n      label: \"Task Capability Cost\",\n      visible: visibleColumns.taskCapabilityCost,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"manual\",\n      label: \"Manual\",\n      visible: visibleColumns.manual,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n    {\n      id: \"cashReceived\",\n      label: \"Cash Received\",\n      visible: visibleColumns.cashReceived,\n      aggregate: \"sum\",\n      color: \"green\",\n    },\n  ];\n\n  const calculateAggregates = (data) => {\n    const result = {};\n    columns.forEach((col) => {\n      if (col.aggregate === \"sum\") {\n        result[col.id] = data.reduce((sum, row) => sum + (row[col.id] || 0), 0);\n      } else if (col.aggregate === \"avg\") {\n        let sum = 0,\n          count = 0;\n        data.forEach((row) => {\n          if (row[col.id] !== undefined && row[col.id] !== null) {\n            sum += row[col.id];\n            count += 1;\n          }\n        });\n        result[col.id] = count > 0 ? sum / count : 0;\n      }\n    });\n    return result;\n  };\n\n  const fetchAllCouriers = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/couriers/all-stats`);\n      const data = await response.json();\n\n      console.log(data.data[0]);\n\n      if (data.success) {\n        const formattedData = data.data.map((courierData) => ({\n          date: new Date(courierData.date).toISOString().slice(5, 10),\n          courierId: courierData.courierId,\n          tar: courierData.tar?.value || 0,\n          tcr: courierData.tcr?.value || 0,\n          dph: courierData.dph?.value || 0,\n          onlineHours: courierData.onlineHours?.value || 0,\n          onTaskHours: courierData.onTaskHours?.value || 0,\n          idleHours: courierData.idleHours?.value || 0,\n          numDeliveries: courierData.numDeliveries?.value || 0,\n          tarShownTasks: courierData.tarShownTasks?.value || 0,\n          tarStartedTasks: Number(courierData.tarStartedTasks?.value) || 0,\n          taskDistanceCost:\n            (courierData.earnings || [])\n              .filter(\n                (e) =>\n                  e.transactionType === \"transaction_type_task_distance_cost\"\n              )\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          shiftGuarantee:\n            (courierData.earnings || [])\n              .filter(\n                (e) => e.transactionType === \"transaction_type_shift_guarantee\"\n              )\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          upfrontPricingAdjustment:\n            (courierData.earnings || [])\n              .filter(\n                (e) =>\n                  e.transactionType ===\n                  \"transaction_type_upfront_pricing_adjustment\"\n              )\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          taskPickupDistanceCost:\n            (courierData.earnings || [])\n              .filter(\n                (e) =>\n                  e.transactionType ===\n                  \"transaction_type_task_pickup_distance_cost\"\n              )\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          taskBaseCost:\n            (courierData.earnings || [])\n              .filter(\n                (e) => e.transactionType === \"transaction_type_task_base_cost\"\n              )\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          tip:\n            (courierData.earnings || [])\n              .filter((e) => e.transactionType === \"transaction_type_tip\")\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          taskCapabilityCost:\n            (courierData.earnings || [])\n              .filter(\n                (e) =>\n                  e.transactionType === \"transaction_type_task_capability_cost\"\n              )\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          manual:\n            (courierData.earnings || [])\n              .filter((e) => e.transactionType === \"transaction_type_manual\")\n              .reduce((sum, e) => sum + e.amount, 0) / 1000,\n          cashReceived: courierData.cashBalance?.amount || 0,\n        }));\n\n        setRows(formattedData);\n      } else {\n        setRows([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching courier data:\", error);\n      setRows([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch all courier data on component mount\n  useEffect(() => {\n    fetchAllCouriers();\n  }, [fetchAllCouriers]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (courierId) {\n      // Navigate to WoltDashboard with the courier ID\n      navigate(`/dashboard?courierId=${courierId}`);\n    }\n  };\n\n  const handleRowClick = (row) => {\n    // Navigate to WoltDashboard when a row is clicked\n    navigate(`/dashboard?courierId=${row.courierId}`);\n  };\n\n  const toggleColumn = (columnId) => {\n    setVisibleColumns((prev) => ({\n      ...prev,\n      [columnId]: !prev[columnId],\n    }));\n  };\n\n  const aggregates = calculateAggregates(rows);\n\n  const getCellColor = (columnId) => {\n    const column = columns.find((col) => col.id === columnId);\n    if (!column || !column.color) return undefined;\n\n    if (theme.palette.mode === \"light\") {\n      if (column.color === \"purple\") {\n        return \"#e0d7f1\";\n      } else if (column.color === \"White\") {\n        return \"#f5f5f5\"; // Light gray for white in light mode\n      } else {\n        return \"#d7f1d7\"; // Green\n      }\n    } else {\n      if (column.color === \"purple\") {\n        return \"#4a148c\";\n      } else if (column.color === \"White\") {\n        return \"#303030\"; // Dark gray for white in dark mode\n      } else {\n        return \"#1b5e20\"; // Dark green\n      }\n    }\n  };\n\n  const getHeaderColor = (columnId) => {\n    const column = columns.find((col) => col.id === columnId);\n    if (!column || !column.color) return undefined;\n\n    if (theme.palette.mode === \"light\") {\n      if (column.color === \"purple\") {\n        return \"#d6c6e9\";\n      } else if (column.color === \"White\") {\n        return \"#e0e0e0\"; // Slightly darker gray for headers in light mode\n      } else {\n        return \"#c6e9c6\"; // Green\n      }\n    } else {\n      if (column.color === \"purple\") {\n        return \"#6a1b9a\";\n      } else if (column.color === \"null\") {\n        return \"#424242\"; // Slightly lighter gray for headers in dark mode\n      } else {\n        return \"#2e7d32\"; // Dark green\n      }\n    }\n  };\n\n  const formatNumber = (number) => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ p: 2, maxWidth: \"100%\" }}>\n        <Card sx={{ mb: 3 }}>\n          <CardHeader title=\"Courier Search\" />\n          <CardContent>\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ display: \"flex\", justifyContent: \"center\", mb: 3 }}>\n                <Grid container spacing={2} sx={{ maxWidth: \"800px\" }}>\n                  <Grid\n                    item\n                    xs={12}\n                    md={8}\n                    sx={{ display: \"flex\", alignItems: \"flex-start\" }}\n                  >\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      value={courierId}\n                      onChange={(e) => setCourierId(e.target.value)}\n                      placeholder=\"Enter courier ID to view detailed dashboard\"\n                      helperText=\"Enter ID and click Search to view detailed dashboard\"\n                      label=\"Courier ID\"\n                      sx={{ mt: 0 }}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    md={4}\n                    sx={{ display: \"flex\", alignItems: \"flex-start\" }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      fullWidth\n                      sx={{ height: 40, mt: 1 }}\n                      disabled={!courierId}\n                    >\n                      View Detailed Dashboard\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </form>\n\n            <Box sx={{ mb: 2 }}>\n              <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"body2\" fontWeight=\"medium\">\n                    Column Visibility\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Grid container spacing={1}>\n                    {columns.map((col) => (\n                      <Grid item xs={6} md={4} lg={2} key={col.id}>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={visibleColumns[col.id]}\n                              onChange={() => toggleColumn(col.id)}\n                              size=\"small\"\n                            />\n                          }\n                          label={\n                            <Typography\n                              variant=\"body2\"\n                              sx={{\n                                color:\n                                  col.color === \"purple\"\n                                    ? \"purple\"\n                                    : col.color === \"green\"\n                                    ? \"green\"\n                                    : \"inherit\",\n                              }}\n                            >\n                              {col.label}\n                            </Typography>\n                          }\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </AccordionDetails>\n              </Accordion>\n            </Box>\n\n            <TableContainer\n              component={Paper}\n              sx={{\n                overflowX: \"auto\",\n                maxHeight: \"600px\", // Set a max height to enable vertical scrolling\n                \"& .MuiTableHead-root\": {\n                  position: \"sticky\",\n                  top: 0,\n                  zIndex: 1, // Ensure header stays above content when scrolling\n                },\n              }}\n            >\n              {\" \"}\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    {columns\n                      .filter((col) => col.visible)\n                      .map((col) => (\n                        <TableCell\n                          key={col.id}\n                          sx={{\n                            backgroundColor: getHeaderColor(col.id),\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          {col.label}\n                        </TableCell>\n                      ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {loading ? (\n                    <TableRow>\n                      <TableCell\n                        colSpan={columns.filter((col) => col.visible).length}\n                        align=\"center\"\n                      >\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            p: 2,\n                          }}\n                        >\n                          <CircularProgress size={24} />\n                          <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                            Loading data...\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ) : rows.length === 0 ? (\n                    <TableRow>\n                      <TableCell\n                        colSpan={columns.filter((col) => col.visible).length}\n                        align=\"center\"\n                      >\n                        <Typography variant=\"body2\">\n                          No data available\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <>\n                      {rows.map((row, idx) => (\n                        <TableRow\n                          key={idx}\n                          hover\n                          onClick={() => handleRowClick(row)}\n                          sx={{ cursor: \"pointer\", p: 0 }}\n                        >\n                          {columns\n                            .filter((col) => col.visible)\n                            .map((col) => (\n                              <TableCell\n                                key={col.id}\n                                sx={{\n                                  backgroundColor: getCellColor(col.id),\n                                  whiteSpace: \"nowrap\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {col.id === \"date\"\n                                  ? row[col.id]\n                                  : col.id === \"courierId\"\n                                  ? row[col.id]\n                                  : typeof row[col.id] === \"number\"\n                                  ? col.id.includes(\"Hours\")\n                                    ? `${Number(row[col.id]).toFixed(2)}h`\n                                    : col.color === \"purple\"\n                                    ? col.id === \"numDeliveries\" ||\n                                      col.id === \"tarShownTasks\" ||\n                                      col.id === \"tarStartedTasks\"\n                                      ? Number(row[col.id])\n                                      : Number(row[col.id]).toFixed(2)\n                                    : formatNumber(Math.round(row[col.id]))\n                                  : row[col.id] || \"0\"}\n                              </TableCell>\n                            ))}\n                        </TableRow>\n                      ))}\n                      <TableRow>\n                        {columns\n                          .filter((col) => col.visible)\n                          .map((col) => (\n                            <TableCell\n                              key={col.id}\n                              sx={{\n                                fontWeight: \"bold\",\n                                backgroundColor: getHeaderColor(col.id),\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              {col.id === \"date\"\n                                ? \"Summary\"\n                                : aggregates[col.id] !== undefined\n                                ? col.id.includes(\"Hours\")\n                                  ? Number(aggregates[col.id]).toFixed(2) + \"h\"\n                                  : col.aggregate === \"avg\"\n                                  ? Number(aggregates[col.id]).toFixed(2)\n                                  : formatNumber(Math.round(aggregates[col.id]))\n                                : \"\"}\n                            </TableCell>\n                          ))}\n                      </TableRow>\n                    </>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default CourierSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}